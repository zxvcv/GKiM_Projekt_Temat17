#include "pch.h"
#include "palette.h"


//-----------------palette-----------------

Palette::Palette(PALETTE_TYPE type) : type(type)
{
	switch (type)
	{
	case IMPOSED_PALETTE:
		this->init_palette1();
		break;
	case DEDICATED_PALETTE:
		this->init_palette2();
		break;
	case SHADERS_OF_GREY_PALETTE:
		this->init_palette3();
		break;
	default:
		break;
	}
}

void Palette::changePalette(PALETTE_TYPE type)
{
	palette.clear();
	switch (type)
	{
	case IMPOSED_PALETTE:
		this->init_palette1();
		break;
	case DEDICATED_PALETTE:
		this->init_palette2();
		break;
	case SHADERS_OF_GREY_PALETTE:
		this->init_palette3();
		break;
	default:
		break;
	}
}

std::vector<SDL_Color> &Palette::returnPalette()
{
	return palette;
}

PALETTE_TYPE Palette::returnPaletteType()
{
	return type;
}

int Palette::getSize()
{
	return palette.size();
}

void Palette::init_palette1()
{
	palette = { {   0,   0,   0 }, {   0,   0,  85 }, {   0,   0, 171 }, {   0,   0, 255 },
				{   0,  85,   0 }, {   0,  85,  85 }, {   0,  85, 171 }, {   0,  85, 255 },
				{   0, 171,   0 }, {   0, 171,  85 }, {   0, 171, 171 }, {   0, 171, 255 },
				{   0, 255,   0 }, {   0, 255,  85 }, {   0, 255, 171 }, {   0, 255, 255 },
				{  85,   0,   0 }, {  85,   0,  85 }, {  85,   0, 171 }, {  85,   0, 255 },
				{  85,  85,   0 }, {  85,  85,  85 }, {  85,  85, 171 }, {  85,  85, 255 },
				{  85, 171,   0 }, {  85, 171,  85 }, {  85, 171, 171 }, {  85, 171, 255 },
				{  85, 255,   0 }, {  85, 255,  85 }, {  85, 255, 171 }, {  85, 255, 255 },
				{ 171,   0,   0 }, { 171,   0,  85 }, { 171,   0, 171 }, { 171,   0, 255 },
				{ 171,  85,   0 }, { 171,  85,  85 }, { 171,  85, 171 }, { 171,  85, 255 },
				{ 171, 171,   0 }, { 171, 171,  85 }, { 171, 171, 171 }, { 171, 171, 255 },
				{ 171, 255,   0 }, { 171, 255,  85 }, { 171, 255, 171 }, { 171, 255, 255 },
				{ 255,   0,   0 }, { 255,   0,  85 }, { 255,   0, 171 }, { 255,   0, 255 },
				{ 255,  85,   0 }, { 255,  85,  85 }, { 255,  85, 171 }, { 255,  85, 255 },
				{ 255, 171,   0 }, { 255, 171,  85 }, { 255, 171, 171 }, { 255, 171, 255 },
				{ 255, 255,   0 }, { 255, 255,  85 }, { 255, 255, 171 }, { 255, 255, 255 } };
}

void Palette::init_palette2()
{
	load_dedicated_palette(input_file, input_file->w, input_file->h, palette);

	//palette = { {   0,   0,   0 }, {   0,   0,  64 }, {   0,   0, 128 }, {   0,   0, 192 },
	//			{   0,  64,   0 }, {   0,  64,  64 }, {   0,  64, 128 }, {   0,  64, 192 },
	//			{   0, 128,   0 }, {   0, 128,  64 }, {   0, 128, 128 }, {   0, 128, 192 },
	//			{   0, 192,   0 }, {   0, 192,  64 }, {   0, 192, 128 }, {   0, 192, 192 },
	//			{  64,   0,   0 }, {  64,   0,  64 }, {  64,   0, 128 }, {  64,   0, 192 },
	//			{  64,  64,   0 }, {  64,  64,  64 }, {  64,  64, 128 }, {  64,  64, 192 },
	//			{  64, 128,   0 }, {  64, 128,  64 }, {  64, 128, 128 }, {  64, 128, 192 },
	//			{  64, 192,   0 }, {  64, 192,  64 }, {  64, 192, 128 }, {  64, 192, 192 },
	//			{ 128,   0,   0 }, { 128,   0,  64 }, { 128,   0, 128 }, { 128,   0, 192 },
	//			{ 128,  64,   0 }, { 128,  64,  64 }, { 128,  64, 128 }, { 128,  64, 192 },
	//			{ 128, 128,   0 }, { 128, 128,  64 }, { 128, 128, 128 }, { 128, 128, 192 },
	//			{ 128, 192,   0 }, { 128, 192,  64 }, { 128, 192, 128 }, { 128, 192, 192 },
	//			{ 192,   0,   0 }, { 192,   0,  64 }, { 192,   0, 128 }, { 192,   0, 192 },
	//			{ 192,  64,   0 }, { 192,  64,  64 }, { 192,  64, 128 }, { 192,  64, 192 },
	//			{ 192, 128,   0 }, { 192, 128,  64 }, { 192, 128, 128 }, { 192, 128, 192 },
	//			{ 192, 192,   0 }, { 192, 192,  64 }, { 192, 192, 128 }, { 192, 192, 192 } };
}

void Palette::init_palette3()
{
	palette = { {   0,   0,   0 }, {   4,   4,   4 }, {   8,   8,   8 }, {  12,  12,  12 },
				{  16,  16,  16 }, {  20,  20,  20 }, {  24,  24,  24 }, {  28,  28,  28 },
				{  32,  32,  32 }, {  36,  36,  36 }, {  40,  40,  40 }, {  44,  44,  44 },
				{  48,  48,  48 }, {  52,  52,  52 }, {  56,  56,  56 }, {  60,  60,  60 },
				{  64,  64,  64 }, {  68,  68,  68 }, {  72,  72,  72 }, {  76,  76,  76 },
				{  80,  80,  80 }, {  84,  84,  84 }, {  88,  88,  88 }, {  92,  92,  92 },
				{  96,  96,  96 }, { 100, 100, 100 }, { 104, 104, 104 }, { 108, 108, 108 },
				{ 112, 112, 112 }, { 116, 116, 116 }, { 120, 120, 120 }, { 124, 124, 124 },
				{ 128, 128, 128 }, { 132, 132, 132 }, { 136, 136, 136 }, { 140, 140, 140 },
				{ 144, 144, 144 }, { 148, 148, 148 }, { 152, 152, 152 }, { 156, 156, 156 },
				{ 160, 160, 160 }, { 164, 164, 164 }, { 168, 168, 168 }, { 172, 172, 172 },
				{ 176, 176, 176 }, { 180, 180, 180 }, { 184, 184, 184 }, { 188, 188, 188 },
				{ 192, 192, 192 }, { 196, 196, 196 }, { 200, 200, 200 }, { 204, 204, 204 },
				{ 208, 208, 208 }, { 212, 212, 212 }, { 216, 216, 216 }, { 220, 220, 220 },
				{ 224, 224, 224 }, { 228, 228, 228 }, { 232, 232, 232 }, { 236, 236, 236 },
				{ 240, 240, 240 }, { 244, 244, 244 }, { 248, 248, 248 }, { 252, 252, 252 } };
}

